@use "sass:color";

.profilePage {
  width: 100%;
}

.profileHeader {
  margin-bottom: 32px;

  h1 {
    font-size: 36px;
    font-weight: $font-weight600;
    color: $color-black-zinc-950;
    margin: 0 0 32px 0;
  }
}

.profileContent {
  display: flex;
  flex-direction: column;
  gap: 0px;
}

.profileImageSection {
  display: flex;
  justify-content: flex-start;
  padding: 0 0 32px 0;
}

.profileAvatar {
  position: relative;
  width: 64px;
  height: 64px;
  overflow: hidden;
  transition: $transition;

  &:hover {
    .uploadButton {
      transform: translateY(0);
    }
  }
}

.avatarPlaceholder {
  width: 64px;
  height: 64px;
  border-radius: 50%;
  background: #F4F6FB;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  transition: $transition;

  svg {
    width: 32px;
    height: 32px;
  }
}

.avatarImage {
  position: relative;
  width: 64px;
  height: 64px;
  border-radius: 50%;
  overflow: hidden;
  background: #F4F6FB;
  transition: $transition;
}

.imagePreview {
  border-radius: 50%;
}

.fileInput {
  display: none;
}

.uploadButton {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 64px;
  height: 31px;
  border-radius: 0 0 100px 100px;
  background-color: #000000D4;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: white;
  transform: translateY(150px);
  transition: $transition;

  &:hover:not(:disabled) {
    transform: none;
  }

  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  svg {
    width: 16px;
    height: 16px;
  }
}

.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.profileForm {
  display: flex;
  flex-direction: column;
  gap: 24px;

  // Override Input component margins for consistent spacing
  :global(.form-group) {
    margin-bottom: 0 !important;
  }
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0px;

  label {
    font-size: 14px;
    font-weight: 500;
    color: #374151;
  }
}

.formInput,
.formSelect {
  background: #F4F6FB !important;
  font-weight: $font-weight500 !important;

  &:focus {
    outline: none;
    border-color: $color-blue;
    background-color: white;
    box-shadow: 0 0 0 3px rgba(43, 127, 255, 0.1);
  }

  &::placeholder {
    color: #9ca3af;
  }
}

.formSelect {
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1.5L6 6.5L11 1.5' stroke='%23374151' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E") !important;
  background-repeat: no-repeat !important;
  background-position: right 16px center !important;
  padding-right: 40px !important;
}

// Custom class for SelectWithFlag component without dropdown arrow background
.selectWithFlagCustom {
  // Remove border and background to avoid double styling
  border: none !important;
  background: none !important;
  padding: 0 !important;

  // Let the SelectWithFlag component handle its own styling
  .selectButton {
    border: 1px solid #d1d5db;
    border-radius: 6px;
    background-color: #f9fafb;

    &:focus {
      border-color: $color-blue;
      background-color: white;
      box-shadow: 0 0 0 3px rgba(43, 127, 255, 0.1);
    }
  }
}

.errorMessage {
  color: $error-color;
  font-size: 13px;
  margin-top: 4px;
  margin-bottom: 0;
}

.loadingState {
  padding: 40px 0;
  text-align: center;
  color: #6b7280;
  font-size: 16px;
}

.inputWithIcon {
  position: relative;
  width: 100%;

  input,
  select {
    padding-right: 48px;
  }
}

.inputIcon {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  color: #6b7280;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 20px;
    height: 20px;
  }
}

.selectWithFlag {
  padding-right: 40px !important;
}

.formActions {
  display: flex;
  justify-content: flex-start;
  margin-top: 0px;
}

.saveButton {
  &:active:not(:disabled) {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@media (max-width: 767.55px) {
  .profileHeader {
    margin-bottom: 24px;

    h1 {
      font-size: 24px;
      margin: 0px;
    }
  }

  .profileImageSection {
    padding: 0 0 24px 0;
  }

  .profileForm {
    gap: 20px;

  }

  .formRow {
    grid-template-columns: 1fr;
  }

  .saveButton {
    margin-top: 4px;
    padding: 11.2px 15px;
  }
}


// RTL Support
[dir="rtl"] {
  .uploadButton {
    right: auto;
    left: 0;
  }

  .formGroup {
    select {
      background-position: left 16px center;
      padding-right: 16px;
      padding-left: 40px;
    }
  }

  .inputIcon {
    right: auto;
    left: 16px;
  }

  .inputWithIcon {

    input,
    select {
      padding-right: 16px;
      padding-left: 48px;
    }
  }

  .selectWithFlag {
    padding-left: 40px !important;
    padding-right: 16px !important;
  }
}