@use "sass:color";

.profilePage {
  width: 100%;
}

.profileHeader {
  margin-bottom: 32px;
  
  h1 {
    font-size: 28px;
    font-weight: 600;
    color: $text-primary;
    margin: 0;
  }
}

.profileContent {
  display: flex;
  flex-direction: column;
  gap: 32px;
}

.profileImageSection {
  display: flex;
  justify-content: flex-start;
  padding: 0 0 24px 0;
}

.profileAvatar {
  position: relative;
  width: 80px;
  height: 80px;
}

.avatarPlaceholder {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background: #2B3E50;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  
  svg {
    width: 32px;
    height: 32px;
  }
}

.avatarImage {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  overflow: hidden;
  background: #f3f4f6;
}

.imagePreview {
  border-radius: 50%;
}

.fileInput {
  display: none;
}

.uploadButton {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background-color: $color-blue;
  border: 2px solid white;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: $transition;
  color: white;
  
  &:hover:not(:disabled) {
    background-color: color.adjust($color-blue, $lightness: -10%);
    transform: scale(1.05);
  }
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
  
  svg {
    width: 14px;
    height: 14px;
  }
}

.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.profileForm {
  display: flex;
  flex-direction: column;
  gap: 24px;
  
  // Override Input component margins for consistent spacing
  :global(.form-group) {
    margin-bottom: 0 !important;
  }
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  
  @media (max-width: 767px) {
    grid-template-columns: 1fr;
  }
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 8px;
  
  label {
    font-size: 14px;
    font-weight: 500;
    color: #374151;
  }
}

.formInput,
.formSelect {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  font-size: 15px;
  color: $text-primary;
  background-color: #f9fafb;
  transition: all 0.2s ease;
  
  &:focus {
    outline: none;
    border-color: $color-blue;
    background-color: white;
    box-shadow: 0 0 0 3px rgba(43, 127, 255, 0.1);
  }
  
  &::placeholder {
    color: #9ca3af;
  }
}

.formSelect {
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1.5L6 6.5L11 1.5' stroke='%23374151' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 16px center;
  padding-right: 40px;
}

// Custom class for SelectWithFlag component without dropdown arrow background
.selectWithFlagCustom {
  // Remove border and background to avoid double styling
  border: none !important;
  background: none !important;
  padding: 0 !important;
  
  // Let the SelectWithFlag component handle its own styling
  .selectButton {
    border: 1px solid #d1d5db;
    border-radius: 6px;
    background-color: #f9fafb;
    
    &:focus {
      border-color: $color-blue;
      background-color: white;
      box-shadow: 0 0 0 3px rgba(43, 127, 255, 0.1);
    }
  }
}

.errorMessage {
  color: $error-color;
  font-size: 13px;
  margin-top: 4px;
  margin-bottom: 0;
}

.loadingState {
  padding: 40px 0;
  text-align: center;
  color: #6b7280;
  font-size: 16px;
}

.inputWithIcon {
  position: relative;
  width: 100%;
  
  input,
  select {
    padding-right: 48px;
  }
}

.inputIcon {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  color: #6b7280;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  
  svg {
    width: 20px;
    height: 20px;
  }
}

.selectWithFlag {
  padding-right: 40px !important;
}

.formActions {
  display: flex;
  justify-content: flex-start;
  margin-top: 8px;
}

.saveButton {
  width: 100%;
  padding: 14px 48px;
  background-color: #4A5F8C;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: $transition;
  
  &:hover:not(:disabled) {
    background-color: color.adjust(#4A5F8C, $lightness: -10%);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(74, 95, 140, 0.3);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// RTL Support
[dir="rtl"] {
  .uploadButton {
    right: auto;
    left: 0;
  }
  
  .formGroup {
    select {
      background-position: left 16px center;
      padding-right: 16px;
      padding-left: 40px;
    }
  }
  
  .inputIcon {
    right: auto;
    left: 16px;
  }
  
  .inputWithIcon {
    input,
    select {
      padding-right: 16px;
      padding-left: 48px;
    }
  }
  
  .selectWithFlag {
    padding-left: 40px !important;
    padding-right: 16px !important;
  }
}

